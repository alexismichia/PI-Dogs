{"ast":null,"code":"import axios from 'axios';\nimport { GET_DOGS, GET_TEMPERAMENTS, SET_FILTERS, SET_SORT, SET_PAGE, SET_CURRENT_DOG, CLEAR_CURRENT_DOG, ADD_NEW_DOG } from './types';\n\n// Action creator para obtener la lista de perros\nexport const getDogs = () => async dispatch => {\n  try {\n    const res = await axios.get('/dogs');\n    dispatch({\n      type: GET_DOGS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// Action creator para obtener la lista de temperamentos\nexport const getTemperaments = () => async dispatch => {\n  try {\n    const res = await axios.get('/temperaments');\n    dispatch({\n      type: GET_TEMPERAMENTS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// Action creator para actualizar los filtros\nexport const setFilters = filters => dispatch => {\n  dispatch({\n    type: SET_FILTERS,\n    payload: filters\n  });\n};\n\n// Action creator para actualizar el orden\nexport const setSort = sort => dispatch => {\n  dispatch({\n    type: SET_SORT,\n    payload: sort\n  });\n};\n\n// Action creator para actualizar la página actual\nexport const setPage = page => dispatch => {\n  dispatch({\n    type: SET_PAGE,\n    payload: page\n  });\n};\n\n// Action creator para obtener la información del perro seleccionado\nexport const setCurrentDog = id => async dispatch => {\n  try {\n    const res = await axios.get(`/dogs/${id}`);\n    dispatch({\n      type: SET_CURRENT_DOG,\n      payload: res.data\n    });\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// Action creator para limpiar la información del perro seleccionado\nexport const clearCurrentDog = () => dispatch => {\n  dispatch({\n    type: CLEAR_CURRENT_DOG\n  });\n};\n\n// Action creator para agregar un nuevo perro\nexport const addNewDog = formData => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/dogs', formData, config);\n    dispatch({\n      type: ADD_NEW_DOG,\n      payload: res.data\n    });\n  } catch (err) {\n    console.error(err);\n  }\n};","map":{"version":3,"names":["axios","GET_DOGS","GET_TEMPERAMENTS","SET_FILTERS","SET_SORT","SET_PAGE","SET_CURRENT_DOG","CLEAR_CURRENT_DOG","ADD_NEW_DOG","getDogs","dispatch","res","get","type","payload","data","err","console","error","getTemperaments","setFilters","filters","setSort","sort","setPage","page","setCurrentDog","id","clearCurrentDog","addNewDog","formData","config","headers","post"],"sources":["/home/estudiante/Escritorio/PI-Dogs/PI-Dogs-main/client/src/redux/actions/actions.js"],"sourcesContent":["import axios from 'axios';\nimport {\n  GET_DOGS,\n  GET_TEMPERAMENTS,\n  SET_FILTERS,\n  SET_SORT,\n  SET_PAGE,\n  SET_CURRENT_DOG,\n  CLEAR_CURRENT_DOG,\n  ADD_NEW_DOG\n} from './types';\n\n// Action creator para obtener la lista de perros\nexport const getDogs = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/dogs');\n    dispatch({\n      type: GET_DOGS,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// Action creator para obtener la lista de temperamentos\nexport const getTemperaments = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/temperaments');\n    dispatch({\n      type: GET_TEMPERAMENTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// Action creator para actualizar los filtros\nexport const setFilters = (filters) => (dispatch) => {\n  dispatch({\n    type: SET_FILTERS,\n    payload: filters,\n  });\n};\n\n// Action creator para actualizar el orden\nexport const setSort = (sort) => (dispatch) => {\n  dispatch({\n    type: SET_SORT,\n    payload: sort,\n  });\n};\n\n// Action creator para actualizar la página actual\nexport const setPage = (page) => (dispatch) => {\n  dispatch({\n    type: SET_PAGE,\n    payload: page,\n  });\n};\n\n// Action creator para obtener la información del perro seleccionado\nexport const setCurrentDog = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/dogs/${id}`);\n    dispatch({\n      type: SET_CURRENT_DOG,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// Action creator para limpiar la información del perro seleccionado\nexport const clearCurrentDog = () => (dispatch) => {\n  dispatch({\n    type: CLEAR_CURRENT_DOG,\n  });\n};\n\n// Action creator para agregar un nuevo perro\nexport const addNewDog = (formData) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const res = await axios.post('/dogs', formData, config);\n    dispatch({\n      type: ADD_NEW_DOG,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.error(err);\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,QAAQ,EACRC,gBAAgB,EAChBC,WAAW,EACXC,QAAQ,EACRC,QAAQ,EACRC,eAAe,EACfC,iBAAiB,EACjBC,WAAW,QACN,SAAS;;AAEhB;AACA,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EAC/C,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,OAAO,CAAC;IACpCF,QAAQ,CAAC;MACPG,IAAI,EAAEZ,QAAQ;MACda,OAAO,EAAEH,GAAG,CAACI;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;EACpB;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,eAAe,GAAGA,CAAA,KAAM,MAAOT,QAAQ,IAAK;EACvD,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,eAAe,CAAC;IAC5CF,QAAQ,CAAC;MACPG,IAAI,EAAEX,gBAAgB;MACtBY,OAAO,EAAEH,GAAG,CAACI;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;EACpB;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,UAAU,GAAIC,OAAO,IAAMX,QAAQ,IAAK;EACnDA,QAAQ,CAAC;IACPG,IAAI,EAAEV,WAAW;IACjBW,OAAO,EAAEO;EACX,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,OAAO,GAAIC,IAAI,IAAMb,QAAQ,IAAK;EAC7CA,QAAQ,CAAC;IACPG,IAAI,EAAET,QAAQ;IACdU,OAAO,EAAES;EACX,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,OAAO,GAAIC,IAAI,IAAMf,QAAQ,IAAK;EAC7CA,QAAQ,CAAC;IACPG,IAAI,EAAER,QAAQ;IACdS,OAAO,EAAEW;EACX,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,aAAa,GAAIC,EAAE,IAAK,MAAOjB,QAAQ,IAAK;EACvD,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAE,SAAQe,EAAG,EAAC,CAAC;IAC1CjB,QAAQ,CAAC;MACPG,IAAI,EAAEP,eAAe;MACrBQ,OAAO,EAAEH,GAAG,CAACI;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;EACpB;AACF,CAAC;;AAED;AACA,OAAO,MAAMY,eAAe,GAAGA,CAAA,KAAOlB,QAAQ,IAAK;EACjDA,QAAQ,CAAC;IACPG,IAAI,EAAEN;EACR,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMsB,SAAS,GAAIC,QAAQ,IAAK,MAAOpB,QAAQ,IAAK;EACzD,IAAI;IACF,MAAMqB,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IAED,MAAMrB,GAAG,GAAG,MAAMX,KAAK,CAACiC,IAAI,CAAC,OAAO,EAAEH,QAAQ,EAAEC,MAAM,CAAC;IACvDrB,QAAQ,CAAC;MACPG,IAAI,EAAEL,WAAW;MACjBM,OAAO,EAAEH,GAAG,CAACI;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;EACpB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}